import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Configura칞칚o da p치gina
st.set_page_config(page_title="An치lise Clim치tica", layout="wide")

# Carregar os dados
def load_data():
    df = pd.read_csv("https://raw.githubusercontent.com/MarceloMFerreira/archives/refs/heads/main/tempo_final.csv")
    df["Data"] = pd.to_datetime(df["Data"])
    return df

df = load_data()

st.title("游늵 An치lise de Dados Meteorol칩gicos")

# Sele칞칚o de cidades
cidades = st.multiselect("Selecione as cidades:", df["Cidade"].unique(), default=df["Cidade"].unique())
df_filtered = df[df["Cidade"].isin(cidades)]

# Fun칞칚o para gerar hist칩rias de clima
def generate_stories(df):
    df_filtered['Data'] = pd.to_datetime(df_filtered['Data'], errors='coerce')  # Certificar que 'Data' 칠 datetime
    df_filtered['Data'] = df_filtered['Data'].dt.strftime('%Y-%m-%d')

    stories = []
    for _, row in df.iterrows():
        story = ""

        if row["Temp_Max"] > 30:
            if row["Condicao"] in ["Chuva", "Chuva forte", "Chuva com trovoada", "Per칤odos de chuva", "Chuvas e trovoadas ocasionais"]:
                story = f"Hoje, {row['Cidade']} est치 muito quente, com grandes chances de chuva, tornando o dia desconfort치vel."
            elif row["Condicao"] in ["Nevoeiro", "Nublado", "Nebulosidade vari치vel"]:
                story = f"Em {row['Cidade']}, o calor excessivo combinado com o tempo nublado pode tornar o clima abafado e desconfort치vel."
            elif row["Condicao"] == "Maioritariamente nublado":
                story = f"Em {row['Cidade']}, o calor excessivo combinado com um c칠u predominantemente nublado pode tornar o clima abafado."
            else:
                story = f"Hoje, {row['Cidade']} est치 bastante quente, ideal para atividades externas."

        elif 18 <= row["Temp_Max"] <= 26:
            if row["Condicao"] in ["Chuva", "Chuva forte", "Chuva com trovoada", "Per칤odos de chuva", "Chuvas e trovoadas ocasionais"]:
                story = f"{row['Cidade']} tem uma temperatura agrad치vel, mas a chuva pode atrapalhar atividades ao ar livre."
            elif row["Condicao"] in ["Nublado", "Nebulosidade vari치vel"]:
                story = f"{row['Cidade']} tem uma temperatura agrad치vel, mas o c칠u nublado pode tornar as caminhadas menos agrad치veis."
            elif row["Condicao"] == "Maioritariamente com sol":
                story = f"{row['Cidade']} tem um clima perfeito para atividades ao ar livre, com predomin칙ncia de sol."
            elif row["Condicao"] in ["Ventos fortes", "Tempestade com ventos fortes"]:
                story = f"{row['Cidade']} tem uma temperatura confort치vel, mas ventos fortes tornam as atividades ao ar livre mais dif칤ceis."
            else:
                story = f"{row['Cidade']} tem um clima perfeito para caminhadas ao ar livre."

        elif row["Temp_Max"] < 18:
            if row["Condicao"] in ["Chuva", "Chuva forte", "Per칤odos de chuva"]:
                story = f"Em {row['Cidade']}, a temperatura baixa e a chuva forte tornam o dia desconfort치vel e pouco prop칤cio para atividades ao ar livre."
            elif row["Condicao"] == "Neve":
                story = f"{row['Cidade']} est치 com temperatura baixa e neve, tornando o clima ideal para quem gosta de atividades de inverno."
            elif row["Condicao"] in ["Nublado", "Maioritariamente nublado"]:
                story = f"A temperatura est치 fria em {row['Cidade']}, e o c칠u nublado faz o dia parecer ainda mais gelado."
            else:
                story = f"{row['Cidade']} tem um clima ameno, 칩timo para relaxar em ambientes fechados."

        elif row["Condicao"] in ["Tempestade", "Neve", "Granizo"]:
            story = f"Em {row['Cidade']}, condi칞칫es clim치ticas extremas, como {row['Condicao']}, tornam o dia mais dif칤cil."

        elif row["Condicao"] in ["Ventos fortes", "Tempestade com ventos fortes"]:
            story = f"Os ventos fortes em {row['Cidade']} tornam o clima mais intenso, ideal para se proteger em ambientes fechados."
        elif row["Condicao"] == "Nevoeiro":
            story = f"Nevoeiro em {row['Cidade']} pode dificultar a visibilidade, cuidado nas estradas."
        elif row["Condicao"] in ["Trovoada em partes da zona", "Aguaceiro ou trovoada"]:
            story = f"Em {row['Cidade']}, a trovoada em partes da zona pode trazer chuvas e ventos fortes em algumas 치reas."

        # 游댳 Se nenhuma condi칞칚o for atendida, cria uma hist칩ria gen칠rica
        if not story:
            story = f"O clima em {row['Cidade']} hoje 칠 {row['Condicao']}, com temperatura m치xima de {row['Temp_Max']}춿C."

        stories.append(story)

    return stories



# Gerando as hist칩rias
stories = generate_stories(df_filtered)

# Adicionando as hist칩rias ao dataframe
df_filtered['Hist칩ria Clim치tica'] = stories

# Exibindo a tabela interativa com as hist칩rias
st.subheader("游늰 Tabela de Dados Clim치ticos por Data e Cidade")
st.dataframe(df_filtered[['Data', 'Cidade', 'Temp_Max', 'Temp_Min', 'Precipitacao', 'Condicao', 'Hist칩ria Clim치tica']], use_container_width=True)

# Gr치ficos de An치lise
st.subheader("Temperatura M치xima e M칤nima por Data e Cidade")
fig, ax = plt.subplots(figsize=(12, 6))
sns.lineplot(data=df_filtered, x="Data", y="Temp_Max", hue="Cidade", marker="o", ax=ax)
plt.title("Evolu칞칚o da Temperatura M치xima")
plt.xlabel("Data")
plt.ylabel("Temp Max (춿C)")
plt.xticks(rotation=45)
st.pyplot(fig)

fig, ax = plt.subplots(figsize=(12, 6))
sns.lineplot(data=df_filtered, x="Data", y="Temp_Min", hue="Cidade", marker="o", linestyle="dashed", ax=ax)
plt.title("Evolu칞칚o da Temperatura M칤nima")
plt.xlabel("Data")
plt.ylabel("Temp Min (춿C)")
plt.xticks(rotation=45)
st.pyplot(fig)

# Precipita칞칚o
df_pivot_precip = df_filtered.pivot_table(values="Precipitacao", index="Cidade", columns="Data", aggfunc="mean")
fig, ax = plt.subplots(figsize=(12, 6))
sns.heatmap(df_pivot_precip, annot=True, cmap="Blues", fmt=".1f", ax=ax)
plt.title("Precipita칞칚o por Cidade e Data")
plt.xticks(rotation=45)
st.pyplot(fig)

# Temperatura M치xima
df_pivot_max = df_filtered.pivot_table(values="Temp_Max", index="Cidade", columns="Data", aggfunc="mean")
fig, ax = plt.subplots(figsize=(12, 6))
sns.heatmap(df_pivot_max, annot=True, cmap="coolwarm", fmt=".1f", ax=ax)
plt.title("Temperatura M치xima por Cidade e Data")
plt.xticks(rotation=45)
st.pyplot(fig)

# Temperatura M칤nima
df_pivot_min = df_filtered.pivot_table(values="Temp_Min", index="Cidade", columns="Data", aggfunc="mean")
fig, ax = plt.subplots(figsize=(12, 6))
sns.heatmap(df_pivot_min, annot=True, cmap="coolwarm", fmt=".1f", ax=ax)
plt.title("Temperatura M칤nima por Cidade e Data")
plt.xticks(rotation=45)
st.pyplot(fig)

st.write("游늷 **Dica:** Selecione apenas algumas cidades para visualizar melhor os gr치ficos!")
